openapi: 3.0.0
info:
  title: IOBuilders-Bank
  description: This is a Rest API for ioBuilders-bank
  contact:
    email: jacobo.millan@outlook.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: /v1
tags:
- name: Users
  description: Operations about users
- name: Accounts
  description: Operations about accounts
- name: Transactions
  description: Operations about transactions
paths:
  /users:
    post:
      tags:
      - Users
      summary: Create new user
      description: Register a user in the system
      operationId: create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /users/{userID}:
    get:
      tags:
      - Users
      summary: Get user info
      description: get user info
      operationId: get_user_by_id
      parameters:
      - name: userID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 36
          pattern: \b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /accounts:
    get:
      tags:
      - Accounts
      summary: User Accounts
      description: Get User Account List find by User
      operationId: get_accounts_by_user
      parameters:
      - name: userID
        in: query
        required: true
        style: form
        explode: true
        schema:
          maxLength: 36
          pattern: \b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b
          type: string
          format: uuid
      responses:
        200:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
    post:
      tags:
      - Accounts
      summary: New Account
      description: Create a new account
      operationId: create_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
  /accounts/{accountID}:
    get:
      tags:
      - Accounts
      summary: Account info
      description: get Account info
      operationId: get_account_by_id
      parameters:
      - name: accountID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 36
          pattern: \b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
    patch:
      tags:
      - Accounts
      summary: Set account Amount
      description: Set account Balance
      operationId: update_account_amount
      parameters:
      - name: accountID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 36
          pattern: \b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b
          type: string
          format: uuid
      - name: amount
        in: query
        required: true
        style: form
        explode: true
        schema:
          maximum: 90000000000000
          minimum: 0
          type: number
          format: mumber
      responses:
        200:
          description: UPDATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
  /transactions:
    get:
      tags:
      - Transactions
      summary: Account Transactions
      description: Get Transactions by account
      operationId: get_transactions
      parameters:
      - name: iban
        in: query
        required: true
        style: form
        explode: true
        schema:
          maxLength: 24
          pattern: ([a-zA-Z]{2})\s*\t*(\d{2})\s*\t*(\d{4})\s*\t*(\d{4})\s*\t*(\d{2})\s*\t*(\d{10})
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
    post:
      tags:
      - Transactions
      summary: New Transaction
      description: Create new Transaction
      operationId: create_transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
        required: true
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
  /transactions/{transactionID}:
    get:
      tags:
      - Transactions
      summary: Transaction info
      description: Get Transaction info by transactionID
      operationId: get_transaction_by_id
      parameters:
      - name: transactionID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 36
          pattern: \b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
components:
  schemas:
    UserRequest:
      type: object
      properties:
        name:
          maxLength: 50
          pattern: /^[a-z ,.'-]+$/i
          type: string
          example: Name
        surname:
          maxLength: 50
          pattern: /^[a-z ,.'-]+$/i
          type: string
          example: Surname Name
        mail:
          maxLength: 50
          pattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
          type: string
          example: mail@mail.com
        pass:
          maxLength: 50
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: Base64 encode Password
          example: cGFzc3dvcmQ=
    UserResponse:
      type: object
      properties:
        userID:
          maxLength: 36
          pattern: \b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b
          type: string
          format: uuid
          example: ca53bbc5-c35c-4b5c-8095-0d154ab8d6c7
        name:
          maxLength: 50
          pattern: /^[a-z ,.'-]+$/i
          type: string
          example: Name
        surname:
          maxLength: 50
          pattern: /^[a-z ,.'-]+$/i
          type: string
          example: Surname Text
        mail:
          pattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
          type: string
          example: mail@mail.com
        uri:
          type: string
          example: /users/ca53bbc5-c35c-4b5c-8095-0d154ab8d6c7
    Transactions:
      type: object
      properties:
        results:
          maximum: 900
          minimum: 0
          type: number
          example: 1
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionResponse'
    TransactionRequest:
      type: object
      properties:
        amount:
          maximum: 90000000000000
          minimum: 0
          type: number
          example: 100.55
        beneficiaryIBAN:
          maxLength: 24
          pattern: ([a-zA-Z]{2})\s*\t*(\d{2})\s*\t*(\d{4})\s*\t*(\d{4})\s*\t*(\d{2})\s*\t*(\d{10})
          type: string
          example: ES9121000418450200051332
        issuerIBAN:
          maxLength: 24
          pattern: ([a-zA-Z]{2})\s*\t*(\d{2})\s*\t*(\d{4})\s*\t*(\d{4})\s*\t*(\d{2})\s*\t*(\d{10})
          type: string
          example: ES7921000813610123456789
    TransactionResponse:
      type: object
      properties:
        transactionID:
          type: string
          format: uuid
          example: ca53bbc5-c35c-4b5c-8095-0d154ab8d6c7
        uri:
          type: string
          example: /transactions/eda91322-4924-11ec-81d3-0242ac130003
        amount:
          type: number
          example: 100.55
        beneficiaryIBAN:
          maxLength: 24
          pattern: ([a-zA-Z]{2})\s*\t*(\d{2})\s*\t*(\d{4})\s*\t*(\d{4})\s*\t*(\d{2})\s*\t*(\d{10})
          type: string
          example: ES9121000418450200051332
        issuerIBAN:
          maxLength: 24
          pattern: ([a-zA-Z]{2})\s*\t*(\d{2})\s*\t*(\d{4})\s*\t*(\d{4})\s*\t*(\d{2})\s*\t*(\d{10})
          type: string
          example: ES7921000813610123456789
        date:
          type: string
          format: date-time
    AccountRequest:
      type: object
      properties:
        userID:
          maxLength: 36
          pattern: \b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b
          type: string
          format: uuid
    AccountResponse:
      type: object
      properties:
        accountID:
          maxLength: 36
          pattern: \b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b
          type: string
          format: uuid
          example: d8a1e7b6-655b-4f0a-9c30-039cd84c2eb5
        iban:
          maxLength: 24
          pattern: ([a-zA-Z]{2})\s*\t*(\d{2})\s*\t*(\d{4})\s*\t*(\d{4})\s*\t*(\d{2})\s*\t*(\d{10})
          type: string
          example: ES9121000418450200051332
        uri:
          type: string
          example: /accounts/d8a1e7b6-655b-4f0a-9c30-039cd84c2eb5
        owner:
          type: string
          example: /users/ca53bbc5-c35c-4b5c-8095-0d154ab8d6c7
        amount:
          maximum: 90000000000000
          minimum: 0
          type: number
          example: 1500.2
    Accounts:
      type: object
      properties:
        results:
          maximum: 900
          minimum: 0
          type: number
          example: 1
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountResponse'
    errorResponse:
      type: object
      properties:
        message:
          maxLength: 500
          pattern: /^[a-z ,.'-]+$/i
          type: string
        status:
          maximum: 599
          minimum: 100
          type: number
        timestamp:
          type: string
